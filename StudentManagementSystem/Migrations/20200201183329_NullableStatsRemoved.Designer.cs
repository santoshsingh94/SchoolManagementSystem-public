// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentManagementSystem.Models;

namespace SchoolManagementSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200201183329_NullableStatsRemoved")]
    partial class NullableStatsRemoved
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Annual", b =>
                {
                    b.Property<int>("AnnualId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fees")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProgrameId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AnnualId");

                    b.HasIndex("ProgrameId");

                    b.HasIndex("UserId");

                    b.ToTable("Annuals");

                    b.HasData(
                        new
                        {
                            AnnualId = 1,
                            Description = "This is the one year School",
                            Fees = 18000.0,
                            IsActive = true,
                            ProgrameId = 1,
                            Title = "July-May",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("AttendanceTime")
                        .HasColumnType("time");

                    b.Property<int>("ClassTblId")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceId");

                    b.HasIndex("ClassTblId");

                    b.HasIndex("SessionId");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendances");

                    b.HasData(
                        new
                        {
                            AttendanceId = 1,
                            AttendanceDate = new DateTime(2016, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AttendanceTime = new TimeSpan(0, 12, 15, 6, 0),
                            ClassTblId = 1,
                            SessionId = 1,
                            StudentId = 1
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Designation", b =>
                {
                    b.Property<int>("DesignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DesignationId");

                    b.HasIndex("UserId");

                    b.ToTable("Designations");

                    b.HasData(
                        new
                        {
                            DesignationId = 1,
                            IsActive = true,
                            Title = "Principal",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ExamId");

                    b.HasIndex("UserId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            ExamId = 1,
                            Description = "",
                            EndDate = new DateTime(2016, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2016, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Mid Term Exam",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.ExamMark", b =>
                {
                    b.Property<int>("ExamMarkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassSubjectId")
                        .HasColumnType("int");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<int>("ObtainMarks")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TotalMarks")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ExamMarkId");

                    b.HasIndex("ClassSubjectId");

                    b.HasIndex("ExamId");

                    b.HasIndex("StudentId");

                    b.HasIndex("UserId");

                    b.ToTable("ExamMarks");

                    b.HasData(
                        new
                        {
                            ExamMarkId = 1,
                            ClassSubjectId = 1,
                            ExamId = 1,
                            ObtainMarks = 1,
                            StudentId = 1,
                            TotalMarks = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Programe", b =>
                {
                    b.Property<int>("ProgrameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProgrameId");

                    b.HasIndex("UserId");

                    b.ToTable("Programes");

                    b.HasData(
                        new
                        {
                            ProgrameId = 1,
                            IsActive = true,
                            Name = "MCA",
                            StartDate = new DateTime(2016, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.ProgrameSession", b =>
                {
                    b.Property<int>("ProgrameSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgrameId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProgrameSessionId");

                    b.HasIndex("ProgrameId");

                    b.HasIndex("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("ProgrameSessions");

                    b.HasData(
                        new
                        {
                            ProgrameSessionId = 1,
                            Description = "ijklmnop",
                            Details = "abcdefgh",
                            ProgrameId = 1,
                            RegDate = new DateTime(2016, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SessionId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            SessionId = 1,
                            EndDate = new DateTime(2016, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "July",
                            StartDate = new DateTime(2016, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.HasIndex("UserId");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            StaffId = 1,
                            Address = "Allahabad",
                            BasicSalary = 25000.0,
                            ContactNo = "1234567890",
                            Description = "Completed PHd from MNNIT Allahabad",
                            DesignationId = 0,
                            Email = "rahulmishra@gmail.com",
                            IsActive = true,
                            Name = "Rahul Mishra",
                            Qualification = "P.Hd",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.StaffAttendance", b =>
                {
                    b.Property<int>("StaffAttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("ComingTime")
                        .HasColumnType("time");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("StaffAttendanceId");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffAttendances");

                    b.HasData(
                        new
                        {
                            StaffAttendanceId = 1,
                            AttendanceDate = new DateTime(2016, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClosingTime = new TimeSpan(0, 1, 15, 6, 0),
                            ComingTime = new TimeSpan(0, 12, 15, 6, 0),
                            StaffId = 1
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AadharNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApply")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnrolled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShortlist")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PreviousPercentage")
                        .HasColumnType("float");

                    b.Property<string>("PreviousSchool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgrameId")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("ProgrameId");

                    b.HasIndex("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            AadharNo = "1234567890",
                            Address = "Varanasi",
                            ApplyDate = new DateTime(2016, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactNo = "8652544148",
                            DateOfBirth = new DateTime(1994, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ausantoshsingh@gmail.com",
                            FatherName = "C. B. Singh",
                            Gender = "Male",
                            IsApply = true,
                            IsEnrolled = true,
                            IsShortlist = true,
                            Name = "Santosh Singh",
                            Photo = "",
                            PreviousPercentage = 70.0,
                            PreviousSchool = "MIIT Varanasi",
                            ProgrameId = 1,
                            SessionId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalMarks")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            Description = "Computer Networks is one the most important subject in Computer Science.",
                            Name = "Computer Networks",
                            RegDate = new DateTime(2016, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalMarks = 80,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.SubmissionFee", b =>
                {
                    b.Property<int>("SubmissionFeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ClassTblId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgrameId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SubmissionFeeId");

                    b.HasIndex("ClassTblId");

                    b.HasIndex("ProgrameId");

                    b.HasIndex("StudentId");

                    b.HasIndex("UserId");

                    b.ToTable("SubmissionFees");

                    b.HasData(
                        new
                        {
                            SubmissionFeeId = 1,
                            Amount = 60000.0,
                            ClassTblId = 1,
                            Description = "This is Jan month fee",
                            FeeMonth = "January",
                            ProgrameId = 1,
                            StudentId = 1,
                            SubmissionDate = new DateTime(2016, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.TimeTable", b =>
                {
                    b.Property<int>("TimeTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassSubjectId")
                        .HasColumnType("int");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TimeTableId");

                    b.HasIndex("ClassSubjectId");

                    b.HasIndex("StaffId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("TimeTables");

                    b.HasData(
                        new
                        {
                            TimeTableId = 1,
                            ClassSubjectId = 1,
                            Day = "Saturday",
                            EndTime = new TimeSpan(0, 12, 55, 6, 0),
                            IsActive = true,
                            StaffId = 1,
                            StartTime = new TimeSpan(0, 12, 15, 6, 0),
                            SubjectId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "Varanasi",
                            ContactNo = "8652544148",
                            Email = "ausantoshsingh@gmail.com",
                            FullName = "Santosh Singh",
                            Password = "sks@123",
                            UserName = "ausantoshsingh@gmail.com",
                            UserTypeId = 1
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.UserType", b =>
                {
                    b.Property<int>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserTypeId");

                    b.HasIndex("TypeName")
                        .IsUnique()
                        .HasFilter("[TypeName] IS NOT NULL");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            UserTypeId = 1,
                            Description = "xyz",
                            TypeName = "Admin"
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Entities.ClassSubject", b =>
                {
                    b.Property<int>("ClassSubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassTblId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("ClassSubjectId");

                    b.HasIndex("ClassTblId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ClassSubjects");

                    b.HasData(
                        new
                        {
                            ClassSubjectId = 1,
                            ClassTblId = 1,
                            IsActive = true,
                            Name = "Math",
                            SubjectId = 1
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Entities.ClassTbl", b =>
                {
                    b.Property<int>("ClassTblId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassTblId");

                    b.ToTable("ClassTbls");

                    b.HasData(
                        new
                        {
                            ClassTblId = 1,
                            IsActive = true,
                            Name = "High School"
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Entities.StudentPromote", b =>
                {
                    b.Property<int>("StudentPromoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnnualFee")
                        .HasColumnType("int");

                    b.Property<int>("ClassTblId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSubmit")
                        .HasColumnType("bit");

                    b.Property<int>("ProgrameSessionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PromoteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("StudentPromoteId");

                    b.HasIndex("ClassTblId");

                    b.HasIndex("ProgrameSessionId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentPromotes");

                    b.HasData(
                        new
                        {
                            StudentPromoteId = 1,
                            AnnualFee = 10000,
                            ClassTblId = 1,
                            ProgrameSessionId = 1,
                            PromoteDate = new DateTime(2016, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 1
                        });
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Annual", b =>
                {
                    b.HasOne("SchoolManagementSystem.Model.Entities.Programe", "Programe")
                        .WithMany("Annuals")
                        .HasForeignKey("ProgrameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.User", "User")
                        .WithMany("Annuals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Attendance", b =>
                {
                    b.HasOne("SchoolManagementSystem.Models.Entities.ClassTbl", "ClassTbl")
                        .WithMany("Attendances")
                        .HasForeignKey("ClassTblId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.Session", "Session")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.Student", "Student")
                        .WithMany("Attendances")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Designation", b =>
                {
                    b.HasOne("SchoolManagementSystem.Model.Entities.User", "User")
                        .WithMany("Designations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Exam", b =>
                {
                    b.HasOne("SchoolManagementSystem.Model.Entities.User", "User")
                        .WithMany("Exams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.ExamMark", b =>
                {
                    b.HasOne("SchoolManagementSystem.Models.Entities.ClassSubject", "ClassSubject")
                        .WithMany("ExamMarks")
                        .HasForeignKey("ClassSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.Exam", "Exam")
                        .WithMany("ExamMarks")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.Student", "Student")
                        .WithMany("ExamMarks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.User", "User")
                        .WithMany("ExamMarks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Programe", b =>
                {
                    b.HasOne("SchoolManagementSystem.Model.Entities.User", "User")
                        .WithMany("Programes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.ProgrameSession", b =>
                {
                    b.HasOne("SchoolManagementSystem.Model.Entities.Programe", "Programe")
                        .WithMany("ProgrameSessions")
                        .HasForeignKey("ProgrameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.Session", "Session")
                        .WithMany("ProgrameSessions")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.User", "User")
                        .WithMany("ProgrameSessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Session", b =>
                {
                    b.HasOne("SchoolManagementSystem.Model.Entities.User", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Staff", b =>
                {
                    b.HasOne("SchoolManagementSystem.Model.Entities.User", "User")
                        .WithMany("Staffs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.StaffAttendance", b =>
                {
                    b.HasOne("SchoolManagementSystem.Model.Entities.Staff", "Staff")
                        .WithMany("StaffAttendances")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Student", b =>
                {
                    b.HasOne("SchoolManagementSystem.Model.Entities.Programe", "Programe")
                        .WithMany("Students")
                        .HasForeignKey("ProgrameId");

                    b.HasOne("SchoolManagementSystem.Model.Entities.Session", "Session")
                        .WithMany("Students")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.User", "User")
                        .WithMany("Students")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.Subject", b =>
                {
                    b.HasOne("SchoolManagementSystem.Model.Entities.User", "User")
                        .WithMany("Subjects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.SubmissionFee", b =>
                {
                    b.HasOne("SchoolManagementSystem.Models.Entities.ClassTbl", "ClassTbl")
                        .WithMany("SubmissionFees")
                        .HasForeignKey("ClassTblId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.Programe", "Programe")
                        .WithMany("SubmissionFees")
                        .HasForeignKey("ProgrameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.Student", "Student")
                        .WithMany("SubmissionFees")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.User", "User")
                        .WithMany("SubmissionFees")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.TimeTable", b =>
                {
                    b.HasOne("SchoolManagementSystem.Models.Entities.ClassSubject", "ClassSubject")
                        .WithMany("TimeTables")
                        .HasForeignKey("ClassSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.Staff", "Staff")
                        .WithMany("TimeTables")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.Subject", "Subject")
                        .WithMany("TimeTables")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.User", "User")
                        .WithMany("TimeTables")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagementSystem.Model.Entities.User", b =>
                {
                    b.HasOne("SchoolManagementSystem.Model.Entities.UserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Entities.ClassSubject", b =>
                {
                    b.HasOne("SchoolManagementSystem.Models.Entities.ClassTbl", "ClassTbl")
                        .WithMany("ClassSubjects")
                        .HasForeignKey("ClassTblId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.Subject", "Subject")
                        .WithMany("ClassSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Entities.StudentPromote", b =>
                {
                    b.HasOne("SchoolManagementSystem.Models.Entities.ClassTbl", "ClassTbl")
                        .WithMany("StudentPromotes")
                        .HasForeignKey("ClassTblId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.ProgrameSession", "ProgrameSession")
                        .WithMany("StudentPromotes")
                        .HasForeignKey("ProgrameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Model.Entities.Student", "Student")
                        .WithMany("StudentPromotes")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
